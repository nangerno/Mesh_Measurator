pip install torch==2.2.0+cpu torchvision==0.17.0+cpu torchaudio==2.2.0+cpu --index-url https://download.pytorch.org/whl/cpu

C:\Users\Administrator/.cache\torch\hub\intel-isl_MiDaS_master\midas\backbones\beit.py

def block_forward(self, x, resolution, shared_rel_pos_bias: Optional[torch.Tensor] = None):
    """
    Modification of timm.models.beit.py: Block.forward to support arbitrary window sizes.
    """
    if self.gamma_1 is None:
        x = x + self.drop_path1(self.attn(self.norm1(x), resolution, shared_rel_pos_bias=shared_rel_pos_bias))
        x = x + self.drop_path2(self.mlp(self.norm2(x)))
    else:
        x = x + self.drop_path1(self.gamma_1 * self.attn(self.norm1(x), resolution,
                                                         shared_rel_pos_bias=shared_rel_pos_bias))
        x = x + self.drop_path2(self.gamma_2 * self.mlp(self.norm2(x)))
    return x



zoedepth/models/model_io.py

def load_state_dict(model, state_dict):
    """Load state_dict into model, handling DataParallel and DistributedDataParallel.
    Also checks for "model" key in state_dict and ignores unexpected 'relative_position_index' keys.
    """
    state_dict = state_dict.get('model', state_dict)
    
    do_prefix = isinstance(
        model, (torch.nn.DataParallel, torch.nn.parallel.DistributedDataParallel))
    
    state = {}
    for k, v in state_dict.items():
        # Ignore 'relative_position_index' keys
        if 'relative_position_index' in k:
            continue
        
        if k.startswith('module.') and not do_prefix:
            k = k[7:]
        elif not k.startswith('module.') and do_prefix:
            k = 'module.' + k
        
        state[k] = v
    
    # Load state dict with strict=False to ignore missing keys
    model.load_state_dict(state, strict=False)
    print("Loaded successfully")
    return model




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

sudo docker build --network=host -t app .

newgrp docker

C:\Windows\System32\curl.exe -k -X POST -F "image=@download.jpg" -F "keep_edges=false" https://df3d-134-195-198-194.ngrok-free.app/generate_mesh --output output_mesh.glb



annotated-types==0.7.0
anyio==4.4.0
certifi==2024.7.4
charset-normalizer==3.3.2
click==8.1.7
colorama==0.4.6
contourpy==1.3.0
cycler==0.12.1
fastapi==0.112.1
filelock==3.15.4
fonttools==4.53.1
fsspec==2024.6.1
h11==0.14.0
huggingface-hub==0.24.6
idna==3.8
Jinja2==3.1.4
kiwisolver==1.4.5
MarkupSafe==2.1.5
matplotlib==3.9.2
mpmath==1.3.0
networkx==3.3
numpy==1.26.4
packaging==24.1
pillow==10.4.0
pydantic==2.8.2
pydantic_core==2.20.1
pyparsing==3.1.4
python-dateutil==2.9.0.post0
python-multipart==0.0.9
PyYAML==6.0.2
requests==2.32.3
safetensors==0.4.4
scipy==1.14.1
setuptools==74.0.0
six==1.16.0
sniffio==1.3.1
starlette==0.38.2
sympy==1.13.2
timm==1.0.8
torch==2.2.0
torchvision==0.17.0
tqdm==4.66.5
trimesh==3.9.42
typing_extensions==4.12.2
urllib3==2.2.2
uvicorn==0.30.6
Werkzeug==3.0.4






FROM python:3.10.12 AS builder
WORKDIR /app
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

FROM python:3.10.12-slim
WORKDIR /app
COPY --from=builder /usr/local/lib/python3.10/site-packages /usr/local/lib/python3.10/site-packages
COPY . .
EXPOSE 5000
CMD ["python", "app.py"]




teach, arrange, grow, fish, accuse, trash, era, educate, pupil, owner, cabbage, beach
123QWE!@#qwe